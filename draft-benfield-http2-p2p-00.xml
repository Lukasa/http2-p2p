<?xml version="1.0" encoding="UTF-8"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc2629 version 1.0.27 -->

<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
]>

<?rfc toc="yes"?>
<?rfc sortrefs="yes"?>
<?rfc symrefs="yes"?>

<rfc ipr="trust200902" docName="draft-benfield-http2-p2p-00" category="std">

  <front>
    <title abbrev="HTTP2-P2P">Peer-to-peer Extension to HTTP/2</title>

    <author initials="C." surname="Benfield" fullname="Cory Benfield">
      <organization></organization>
      <address>
        <email>cory@lukasa.co.uk</email>
      </address>
    </author>

    <date year="2015" month="July" day="08"/>

    <area>Applications and Real-Time Area</area>
    <workgroup>Hypertext Transfer Protocol Working Group</workgroup>
    <keyword>Internet-Draft</keyword>

    <abstract>


<t>This document introduces a negotiated extension to HTTP/2 that
turns a single HTTP/2 connection into a bi-directional
communication channel.</t>



    </abstract>


  </front>

  <middle>


<section anchor="problems" title="Introduction">

<t>The HTTP/2 <xref target="RFC7540"/> specification provides an alternative framing layer for
the semantics of HTTP/1.1 <xref target="RFC7231"/>. This framing layer in principle allows
for both parties in a HTTP/2 session to send requests and responses. However,
the HTTP/2 specification also requires that the semantics of HTTP/1.1 be
preserved. This means that one party of the conversation is considered the
client, and one the server. Only the client may send requests, and only the
server may send responses.</t>

<t>This document introduces an extension that can be negotiated during a HTTP/2
conversation by the means of SETTINGS frames, that allows both the client and
the server to send requests and responses. Essentially, this extension changes
the protocol such that the notion of ‘client’ and ‘server’ are defined on a
per-stream basis, rather than a per-connection basis.</t>

<section anchor="notational-conventions" title="Notational Conventions">

<t>The key words “MUST”, “MUST NOT”, “REQUIRED”, “SHALL”, “SHALL NOT”,
“SHOULD”, “SHOULD NOT”, “RECOMMENDED”, “MAY”, and “OPTIONAL” in this
document are to be interpreted as described in RFC 2119 <xref target="RFC2119"/>.</t>

</section>
</section>
<section anchor="additions" title="Additions to HTTP/2">

<t>This document introduces a new HTTP/2 setting (<xref target="RFC7540"/>, Section 11.3), to
allow for the negotiation of a peer-to-peer HTTP/2 connection. This setting,
SETTINGS_PEER_TO_PEER, is a negotiated setting (<xref target="RFC7540"/>, Section 5.5).</t>

<t>Before using this extension, both the client and the server must emit SETTINGS
frames (<xref target="RFC7540"/>, Section 6.5) that have the value for SETTINGS_PEER_TO_PEER
set to 1, and have those SETTINGS frames acknowledged. If either party does not
emit this setting, this extension MUST NOT be used.</t>

<section anchor="settingspeertopeer-setting" title="SETTINGS_PEER_TO_PEER Setting">

<t>The following new SETTINGS parameter (<xref target="RFC7540"/>, Section 6.5.2) is defined:</t>

<t><list style="symbols">
  <t>SETTINGS_PEER_TO_PEER (0xTBA): Informs the remote endpoint of whether the
sender supports the peer-to-peer extension to HTTP/2. A value of 1 indicates
that the peer-to-peer extension is supported. Any other value, or the absence
of this setting, indicates that the peer-to-peer extension is not supported.</t>
</list></t>

</section>
<section anchor="behavioral-changes" title="Behavioral Changes">

<t>If both parties emit the SETTINGS_PEER_TO_PEER setting with a value of 1, and
have that setting acknowledged, the peer-to-peer extension is now in effect.
This lifts some of the restrictions of RFC 7540 <xref target="RFC7540"/> Section 8.
Specifically, both parties of a HTTP/2 connection MAY begin a stream with a
HEADERS frame corresponding to a request, regardless of whether they are the
server or the client.</t>

<t>From the perspective of RFC 7231 <xref target="RFC7231"/>, the only difference is that
whether a peer is considered a ‘client’ or a ‘server’ is determined on a
per-stream basis, instead of a per-connection basis. If a stream is initiated
by a HEADERS frame, the peer that sent the HEADERS frame is considered the
‘client’ for the remainder of that stream, while the other peer is considered
the ‘server’.</t>

<t>This definition of ‘client’ and ‘server’ is preserved for the purposes of the
PUSH_PROMISE frame (<xref target="RFC7231"/>, Section 6.6). As a result, whichever peer is
considered the ‘server’ for a given stream can push other streams to the
‘client’ peer.</t>

<t>The rest of the requirements of RFC 7231 <xref target="RFC7231"/> are preserved.</t>

</section>
</section>
<section anchor="iana-considerations" title="IANA Considerations">

<t>This document updates the registry for HTTP/2 Settings (<xref target="RFC7540"/>, Section
11.4). The entries in the following table are registered by this document.</t>

<texttable>
      <ttcol align='left'>Name</ttcol>
      <ttcol align='left'>Code</ttcol>
      <ttcol align='left'>Initial Value</ttcol>
      <ttcol align='left'>Specification</ttcol>
      <c>PEER_TO_PEER</c>
      <c>TBD</c>
      <c>0</c>
      <c>Section 2.1</c>
</texttable>

</section>
<section anchor="acknowledgements" title="Acknowledgements">

<t>Thanks to Fedor Indutny for the original idea, and Amos Jeffries and Mike
Bishop for their follow-up.</t>

<t>Thanks also to Tyrel Souza for proofreading.</t>

</section>


  </middle>

  <back>

    <references title='Normative References'>





<reference anchor='RFC7540'>

<front>
<title>Hypertext Transfer Protocol Version 2 (HTTP/2)</title>
<author initials='M.' surname='Belshe' fullname='M. Belshe'>
<organization /></author>
<author initials='R.' surname='Peon' fullname='R. Peon'>
<organization /></author>
<author initials='M.' surname='Thomson' fullname='M. Thomson'>
<organization /></author>
<date year='2015' month='May' />
<abstract>
<t>This specification describes an optimized expression of the semantics of the Hypertext Transfer Protocol (HTTP), referred to as HTTP version 2 (HTTP/2). HTTP/2 enables a more efficient use of network resources and a reduced perception of latency by introducing header field compression and allowing multiple concurrent exchanges on the same connection. It also introduces unsolicited push of representations from servers to clients.&lt;/t>&lt;t> This specification is an alternative to, but does not obsolete, the HTTP/1.1 message syntax. HTTP's existing semantics remain unchanged.</t></abstract></front>

<seriesInfo name='RFC' value='7540' />
<format type='TXT' octets='209580' target='http://www.rfc-editor.org/rfc/rfc7540.txt' />
</reference>



<reference anchor='RFC7231'>

<front>
<title>Hypertext Transfer Protocol (HTTP/1.1): Semantics and Content</title>
<author initials='R.' surname='Fielding' fullname='R. Fielding'>
<organization /></author>
<author initials='J.' surname='Reschke' fullname='J. Reschke'>
<organization /></author>
<date year='2014' month='June' />
<abstract>
<t>The Hypertext Transfer Protocol (HTTP) is a stateless \%application- level protocol for distributed, collaborative, hypertext information systems.  This document defines the semantics of HTTP/1.1 messages, as expressed by request methods, request header fields, response status codes, and response header fields, along with the payload of messages (metadata and body content) and mechanisms for content negotiation.</t></abstract></front>

<seriesInfo name='RFC' value='7231' />
<format type='TXT' octets='235053' target='http://www.rfc-editor.org/rfc/rfc7231.txt' />
</reference>



<reference anchor='RFC2119'>

<front>
<title abbrev='RFC Key Words'>Key words for use in RFCs to Indicate Requirement Levels</title>
<author initials='S.' surname='Bradner' fullname='Scott Bradner'>
<organization>Harvard University</organization>
<address>
<postal>
<street>1350 Mass. Ave.</street>
<street>Cambridge</street>
<street>MA 02138</street></postal>
<phone>- +1 617 495 3864</phone>
<email>sob@harvard.edu</email></address></author>
<date year='1997' month='March' />
<area>General</area>
<keyword>keyword</keyword>
<abstract>
<t>
   In many standards track documents several words are used to signify
   the requirements in the specification.  These words are often
   capitalized.  This document defines these words as they should be
   interpreted in IETF documents.  Authors who follow these guidelines
   should incorporate this phrase near the beginning of their document:

<list>
<t>
      The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL
      NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED",  "MAY", and
      "OPTIONAL" in this document are to be interpreted as described in
      RFC 2119.
</t></list></t>
<t>
   Note that the force of these words is modified by the requirement
   level of the document in which they are used.
</t></abstract></front>

<seriesInfo name='BCP' value='14' />
<seriesInfo name='RFC' value='2119' />
<format type='TXT' octets='4723' target='http://www.rfc-editor.org/rfc/rfc2119.txt' />
<format type='HTML' octets='17970' target='http://xml.resource.org/public/rfc/html/rfc2119.html' />
<format type='XML' octets='5777' target='http://xml.resource.org/public/rfc/xml/rfc2119.xml' />
</reference>




    </references>




  </back>
</rfc>

